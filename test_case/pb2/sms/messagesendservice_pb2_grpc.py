# -*- coding: UTF-8 -*-
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import messagesendservice_pb2 as messagesendservice__pb2


class MessageSendServiceStub(object):
  """短信发送服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.messageBatchSend = channel.unary_unary(
        '/MessageSendService/messageBatchSend',
        request_serializer=messagesendservice__pb2.MessageBatchSendReq.SerializeToString,
        response_deserializer=messagesendservice__pb2.MessageBatchSendRes.FromString,
        )
    self.messageTemplateSend = channel.unary_unary(
        '/MessageSendService/messageTemplateSend',
        request_serializer=messagesendservice__pb2.MessageTemplateSendReq.SerializeToString,
        response_deserializer=messagesendservice__pb2.MessageTemplateSendRes.FromString,
        )
    self.messageCustomSend = channel.unary_unary(
        '/MessageSendService/messageCustomSend',
        request_serializer=messagesendservice__pb2.MessageCustomSendReq.SerializeToString,
        response_deserializer=messagesendservice__pb2.MessageCustomSendRes.FromString,
        )
    self.messageVariableBatchSend = channel.unary_unary(
        '/MessageSendService/messageVariableBatchSend',
        request_serializer=messagesendservice__pb2.MessageVariableBatchSendReq.SerializeToString,
        response_deserializer=messagesendservice__pb2.MessageVariableBatchSendRes.FromString,
        )


class MessageSendServiceServicer(object):
  """短信发送服务
  """

  def messageBatchSend(self, request, context):
    """营销普通短信群发服务
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def messageTemplateSend(self, request, context):
    """模板短信发送服务
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def messageCustomSend(self, request, context):
    """自定义短信发送服务
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def messageVariableBatchSend(self, request, context):
    """营销个性化短信群发服务
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessageSendServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'messageBatchSend': grpc.unary_unary_rpc_method_handler(
          servicer.messageBatchSend,
          request_deserializer=messagesendservice__pb2.MessageBatchSendReq.FromString,
          response_serializer=messagesendservice__pb2.MessageBatchSendRes.SerializeToString,
      ),
      'messageTemplateSend': grpc.unary_unary_rpc_method_handler(
          servicer.messageTemplateSend,
          request_deserializer=messagesendservice__pb2.MessageTemplateSendReq.FromString,
          response_serializer=messagesendservice__pb2.MessageTemplateSendRes.SerializeToString,
      ),
      'messageCustomSend': grpc.unary_unary_rpc_method_handler(
          servicer.messageCustomSend,
          request_deserializer=messagesendservice__pb2.MessageCustomSendReq.FromString,
          response_serializer=messagesendservice__pb2.MessageCustomSendRes.SerializeToString,
      ),
      'messageVariableBatchSend': grpc.unary_unary_rpc_method_handler(
          servicer.messageVariableBatchSend,
          request_deserializer=messagesendservice__pb2.MessageVariableBatchSendReq.FromString,
          response_serializer=messagesendservice__pb2.MessageVariableBatchSendRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MessageSendService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
