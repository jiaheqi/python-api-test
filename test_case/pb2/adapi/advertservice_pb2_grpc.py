# -*- coding: UTF-8 -*-
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import advertservice_pb2 as advertservice__pb2


class AdvertServiceStub(object):
  """
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getAdRoute = channel.unary_unary(
        '/AdvertService/getAdRoute',
        request_serializer=advertservice__pb2.AdRouteRequest.SerializeToString,
        response_deserializer=advertservice__pb2.AdRouteResponse.FromString,
        )


class AdvertServiceServicer(object):
  """
  """

  def getAdRoute(self, request, context):
    """获取广告素材
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AdvertServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getAdRoute': grpc.unary_unary_rpc_method_handler(
          servicer.getAdRoute,
          request_deserializer=advertservice__pb2.AdRouteRequest.FromString,
          response_serializer=advertservice__pb2.AdRouteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AdvertService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
