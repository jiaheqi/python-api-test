# -*- coding: UTF-8 -*-
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import invoiceservice_pb2 as invoiceservice__pb2


class InvoiceServiceStub(object):
  """
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.makeInvoice = channel.unary_unary(
        '/InvoiceService/makeInvoice',
        request_serializer=invoiceservice__pb2.MakeReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.MakeResData.FromString,
        )
    self.queryInvoice = channel.unary_unary(
        '/InvoiceService/queryInvoice',
        request_serializer=invoiceservice__pb2.QueryReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.QueryResData.FromString,
        )
    self.queryInvoiceList = channel.unary_unary(
        '/InvoiceService/queryInvoiceList',
        request_serializer=invoiceservice__pb2.InvoiceListReq.SerializeToString,
        response_deserializer=invoiceservice__pb2.InvoiceListRes.FromString,
        )
    self.preMakeInvoice = channel.unary_unary(
        '/InvoiceService/preMakeInvoice',
        request_serializer=invoiceservice__pb2.PreMakeInvoiceReq.SerializeToString,
        response_deserializer=invoiceservice__pb2.PreMakeInvoiceRes.FromString,
        )
    self.makeRedInvoice = channel.unary_unary(
        '/InvoiceService/makeRedInvoice',
        request_serializer=invoiceservice__pb2.RedInvoiceReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.RedInvoiceResData.FromString,
        )
    self.checkMadeInvoice = channel.unary_unary(
        '/InvoiceService/checkMadeInvoice',
        request_serializer=invoiceservice__pb2.CheckMadeInvoiceReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.CheckMadeInvoiceResData.FromString,
        )
    self.userMakeInvoice = channel.unary_unary(
        '/InvoiceService/userMakeInvoice',
        request_serializer=invoiceservice__pb2.UserMakeInvoiceReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.UserMakeInvoiceResData.FromString,
        )
    self.updateInCardPack = channel.unary_unary(
        '/InvoiceService/updateInCardPack',
        request_serializer=invoiceservice__pb2.UpdateInCardPackReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.UpdateInCardPackResData.FromString,
        )
    self.queryInvoiceLst = channel.unary_unary(
        '/InvoiceService/queryInvoiceLst',
        request_serializer=invoiceservice__pb2.QueryReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.InvoiceListRes.FromString,
        )
    self.confirmMakeInvoice = channel.unary_unary(
        '/InvoiceService/confirmMakeInvoice',
        request_serializer=invoiceservice__pb2.WechatMakeReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.WechatMakeResData.FromString,
        )
    self.queryInvoiceStatus = channel.unary_unary(
        '/InvoiceService/queryInvoiceStatus',
        request_serializer=invoiceservice__pb2.InvoiceQueryStatusReq.SerializeToString,
        response_deserializer=invoiceservice__pb2.InvoiceQueryStatusRes.FromString,
        )
    self.queryInvoiceLightList = channel.unary_unary(
        '/InvoiceService/queryInvoiceLightList',
        request_serializer=invoiceservice__pb2.InvoiceLightListReq.SerializeToString,
        response_deserializer=invoiceservice__pb2.InvoiceLightListRes.FromString,
        )
    self.queryInvoiceSuccessList = channel.unary_unary(
        '/InvoiceService/queryInvoiceSuccessList',
        request_serializer=invoiceservice__pb2.InvoiceSuccessListReq.SerializeToString,
        response_deserializer=invoiceservice__pb2.InvoiceSuccessListRes.FromString,
        )
    self.queryInvoiceDetail = channel.unary_unary(
        '/InvoiceService/queryInvoiceDetail',
        request_serializer=invoiceservice__pb2.QueryReqData.SerializeToString,
        response_deserializer=invoiceservice__pb2.QueryResData.FromString,
        )


class InvoiceServiceServicer(object):
  """
  """

  def makeInvoice(self, request, context):
    """商户向用户开具发票
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryInvoice(self, request, context):
    """发票详情查询
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryInvoiceList(self, request, context):
    """发票列表查询
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def preMakeInvoice(self, request, context):
    """微信预开票接口
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def makeRedInvoice(self, request, context):
    """开具红冲发票
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkMadeInvoice(self, request, context):
    """查找指定订单列表已开具列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def userMakeInvoice(self, request, context):
    """用户通用开票
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateInCardPack(self, request, context):
    """更新插卡状态
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryInvoiceLst(self, request, context):
    """发票信息(部分)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def confirmMakeInvoice(self, request, context):
    """微信开具发票
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryInvoiceStatus(self, request, context):
    """微信端发票状态查询
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryInvoiceLightList(self, request, context):
    """查询发票简略列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryInvoiceSuccessList(self, request, context):
    """查询已开具发票列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryInvoiceDetail(self, request, context):
    """根据taxOrderNo查询发票详情
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_InvoiceServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'makeInvoice': grpc.unary_unary_rpc_method_handler(
          servicer.makeInvoice,
          request_deserializer=invoiceservice__pb2.MakeReqData.FromString,
          response_serializer=invoiceservice__pb2.MakeResData.SerializeToString,
      ),
      'queryInvoice': grpc.unary_unary_rpc_method_handler(
          servicer.queryInvoice,
          request_deserializer=invoiceservice__pb2.QueryReqData.FromString,
          response_serializer=invoiceservice__pb2.QueryResData.SerializeToString,
      ),
      'queryInvoiceList': grpc.unary_unary_rpc_method_handler(
          servicer.queryInvoiceList,
          request_deserializer=invoiceservice__pb2.InvoiceListReq.FromString,
          response_serializer=invoiceservice__pb2.InvoiceListRes.SerializeToString,
      ),
      'preMakeInvoice': grpc.unary_unary_rpc_method_handler(
          servicer.preMakeInvoice,
          request_deserializer=invoiceservice__pb2.PreMakeInvoiceReq.FromString,
          response_serializer=invoiceservice__pb2.PreMakeInvoiceRes.SerializeToString,
      ),
      'makeRedInvoice': grpc.unary_unary_rpc_method_handler(
          servicer.makeRedInvoice,
          request_deserializer=invoiceservice__pb2.RedInvoiceReqData.FromString,
          response_serializer=invoiceservice__pb2.RedInvoiceResData.SerializeToString,
      ),
      'checkMadeInvoice': grpc.unary_unary_rpc_method_handler(
          servicer.checkMadeInvoice,
          request_deserializer=invoiceservice__pb2.CheckMadeInvoiceReqData.FromString,
          response_serializer=invoiceservice__pb2.CheckMadeInvoiceResData.SerializeToString,
      ),
      'userMakeInvoice': grpc.unary_unary_rpc_method_handler(
          servicer.userMakeInvoice,
          request_deserializer=invoiceservice__pb2.UserMakeInvoiceReqData.FromString,
          response_serializer=invoiceservice__pb2.UserMakeInvoiceResData.SerializeToString,
      ),
      'updateInCardPack': grpc.unary_unary_rpc_method_handler(
          servicer.updateInCardPack,
          request_deserializer=invoiceservice__pb2.UpdateInCardPackReqData.FromString,
          response_serializer=invoiceservice__pb2.UpdateInCardPackResData.SerializeToString,
      ),
      'queryInvoiceLst': grpc.unary_unary_rpc_method_handler(
          servicer.queryInvoiceLst,
          request_deserializer=invoiceservice__pb2.QueryReqData.FromString,
          response_serializer=invoiceservice__pb2.InvoiceListRes.SerializeToString,
      ),
      'confirmMakeInvoice': grpc.unary_unary_rpc_method_handler(
          servicer.confirmMakeInvoice,
          request_deserializer=invoiceservice__pb2.WechatMakeReqData.FromString,
          response_serializer=invoiceservice__pb2.WechatMakeResData.SerializeToString,
      ),
      'queryInvoiceStatus': grpc.unary_unary_rpc_method_handler(
          servicer.queryInvoiceStatus,
          request_deserializer=invoiceservice__pb2.InvoiceQueryStatusReq.FromString,
          response_serializer=invoiceservice__pb2.InvoiceQueryStatusRes.SerializeToString,
      ),
      'queryInvoiceLightList': grpc.unary_unary_rpc_method_handler(
          servicer.queryInvoiceLightList,
          request_deserializer=invoiceservice__pb2.InvoiceLightListReq.FromString,
          response_serializer=invoiceservice__pb2.InvoiceLightListRes.SerializeToString,
      ),
      'queryInvoiceSuccessList': grpc.unary_unary_rpc_method_handler(
          servicer.queryInvoiceSuccessList,
          request_deserializer=invoiceservice__pb2.InvoiceSuccessListReq.FromString,
          response_serializer=invoiceservice__pb2.InvoiceSuccessListRes.SerializeToString,
      ),
      'queryInvoiceDetail': grpc.unary_unary_rpc_method_handler(
          servicer.queryInvoiceDetail,
          request_deserializer=invoiceservice__pb2.QueryReqData.FromString,
          response_serializer=invoiceservice__pb2.QueryResData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'InvoiceService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
