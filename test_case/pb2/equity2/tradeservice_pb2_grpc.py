# -*- coding: UTF-8 -*-
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import tradeservice_pb2 as tradeservice__pb2


class TradeServiceStub(object):
  """交易相关方法，充、消、退、提
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.transfer = channel.unary_unary(
        '/TradeService/transfer',
        request_serializer=tradeservice__pb2.TransferReq.SerializeToString,
        response_deserializer=tradeservice__pb2.TransferRes.FromString,
        )
    self.queryWithdrawStatus = channel.unary_unary(
        '/TradeService/queryWithdrawStatus',
        request_serializer=tradeservice__pb2.QueryWithdrawStatusReq.SerializeToString,
        response_deserializer=tradeservice__pb2.QueryWithdrawStatusRes.FromString,
        )
    self.withdraw = channel.unary_unary(
        '/TradeService/withdraw',
        request_serializer=tradeservice__pb2.WithdrawReq.SerializeToString,
        response_deserializer=tradeservice__pb2.WithdrawRes.FromString,
        )
    self.refund = channel.unary_unary(
        '/TradeService/refund',
        request_serializer=tradeservice__pb2.RefundReq.SerializeToString,
        response_deserializer=tradeservice__pb2.RefundRes.FromString,
        )
    self.recharge = channel.unary_unary(
        '/TradeService/recharge',
        request_serializer=tradeservice__pb2.RechargeReq.SerializeToString,
        response_deserializer=tradeservice__pb2.RechargeRes.FromString,
        )
    self.consum = channel.unary_unary(
        '/TradeService/consum',
        request_serializer=tradeservice__pb2.ConsumReq.SerializeToString,
        response_deserializer=tradeservice__pb2.ConsumRes.FromString,
        )


class TradeServiceServicer(object):
  """交易相关方法，充、消、退、提
  """

  def transfer(self, request, context):
    """转账
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryWithdrawStatus(self, request, context):
    """提现结果查询
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def withdraw(self, request, context):
    """提现
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def refund(self, request, context):
    """消费退款,支持部分退款
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recharge(self, request, context):
    """充值
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def consum(self, request, context):
    """消费
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TradeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'transfer': grpc.unary_unary_rpc_method_handler(
          servicer.transfer,
          request_deserializer=tradeservice__pb2.TransferReq.FromString,
          response_serializer=tradeservice__pb2.TransferRes.SerializeToString,
      ),
      'queryWithdrawStatus': grpc.unary_unary_rpc_method_handler(
          servicer.queryWithdrawStatus,
          request_deserializer=tradeservice__pb2.QueryWithdrawStatusReq.FromString,
          response_serializer=tradeservice__pb2.QueryWithdrawStatusRes.SerializeToString,
      ),
      'withdraw': grpc.unary_unary_rpc_method_handler(
          servicer.withdraw,
          request_deserializer=tradeservice__pb2.WithdrawReq.FromString,
          response_serializer=tradeservice__pb2.WithdrawRes.SerializeToString,
      ),
      'refund': grpc.unary_unary_rpc_method_handler(
          servicer.refund,
          request_deserializer=tradeservice__pb2.RefundReq.FromString,
          response_serializer=tradeservice__pb2.RefundRes.SerializeToString,
      ),
      'recharge': grpc.unary_unary_rpc_method_handler(
          servicer.recharge,
          request_deserializer=tradeservice__pb2.RechargeReq.FromString,
          response_serializer=tradeservice__pb2.RechargeRes.SerializeToString,
      ),
      'consum': grpc.unary_unary_rpc_method_handler(
          servicer.consum,
          request_deserializer=tradeservice__pb2.ConsumReq.FromString,
          response_serializer=tradeservice__pb2.ConsumRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TradeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
